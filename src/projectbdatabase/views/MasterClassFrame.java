/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectBdatabase.views;

import ProjectBdatabase.databaseUtil.Connector;
import ProjectBdatabase.models.Masterclass;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruben
 */
public class MasterClassFrame extends javax.swing.JFrame {

    /**
     * Creates new form MasterClassFrame
     */
    private HoofdScherm hoofdScherm;
    private ArrayList<Masterclass> masterclasses;

    public MasterClassFrame(HoofdScherm hoofdScherm) {
        this.hoofdScherm = hoofdScherm;
        initComponents();
        Vullijst();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void Vullijst() {
        String[] kolommen = {"Masterclass ID:", "Masterclass naam:", "Datum:", "Locatie:", "Max Deelnemers:", "Min rating:", "Prijs:", "Leraar naam:"};
        masterclasses = new ArrayList();
        DefaultTableModel Masterclasslijst = new DefaultTableModel(kolommen, 0);
        try {
            //Connectie ophalen met behulp van DataBaseConnector
            Connection conn = Connector.getConnection();

            //Statement object aanmaken met behulp van zojuist aangemaakte connectie
            Statement stat = conn.createStatement();

            //Klanten ophalen uit database
            ResultSet result = stat.executeQuery("SELECT p.pe_code, p.naam,p.postcode,p.huisnummer,p.aantal_deelnemers, p.datum,m.minimale_rating,m.max_aantal_spelers,m.omschrijving,m.prijs,m.leraar,l.naam,s.naam FROM masterclass m JOIN poker_event p ON m.pe_code = p.pe_code LEFT JOIN locatie l ON p.postcode = l.postcode AND p.huisnummer = l.huisnummer JOIN speler s ON m.leraar = s.s_code  order by pe_code ");

            //Resultset doorlopen.
            while (result.next()) {
                int nummer = result.getInt("p.pe_code");
                int aantal_deelnemers = result.getInt("p.aantal_deelnemers");
                String naam = result.getString("p.naam");
                String datum = result.getString("p.datum");
                String locatienaam = result.getString("l.naam");
                String postcode = result.getString("p.postcode");
                String huisnummer = result.getString("p.huisnummer");
                int minimalerating = result.getInt("m.minimale_rating");
                int maxaantalspelers = result.getInt("m.max_aantal_spelers");
                String omschrijving = result.getString("m.omschrijving");
                Double prijs = result.getDouble("m.prijs");
                int s_code = result.getInt("m.leraar");
                String leraarnaam = result.getString("s.naam");

                Masterclass masterclass = new Masterclass(nummer, naam, datum, postcode, huisnummer, aantal_deelnemers, minimalerating, maxaantalspelers, omschrijving, prijs, s_code);
                masterclasses.add(masterclass);
                String[] MasterclassInfo = {String.valueOf(masterclass.pe_code()), masterclass.naam(), masterclass.datum(), locatienaam, String.valueOf(masterclass.maxAantalSpelers()), String.valueOf(masterclass.minimaleRating()), String.valueOf(masterclass.prijs()), leraarnaam};
                Masterclasslijst.addRow(MasterclassInfo);

            }
            tbMasterclass.setModel(Masterclasslijst);

            //Afsluiten van resources.
            result.close();
            stat.close();

        } catch (SQLException exc) {
            System.err.println("Sql fout bij het ophalen van masterclasses: " + exc.toString());
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btSluit = new javax.swing.JButton();
        btnWachtlijst = new javax.swing.JButton();
        btUitschrijven = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMasterclass = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnMasterClassAanpassen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Masterclasses");

        btSluit.setText("Sluit");
        btSluit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSluitActionPerformed(evt);
            }
        });

        btnWachtlijst.setText("Wachtlijst");
        btnWachtlijst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWachtlijstActionPerformed(evt);
            }
        });

        btUitschrijven.setText("Ingeschreven Spelers");
        btUitschrijven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUitschrijvenActionPerformed(evt);
            }
        });

        tbMasterclass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MasterclassID", "Leraar", "Max aantal spelers", "Min rating", "Locatie"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbMasterclass);

        jButton1.setText("Masterclass Toevoegen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Locaties");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Leraar opties");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnMasterClassAanpassen.setText("Masterclass Aanpassen");
        btnMasterClassAanpassen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMasterClassAanpassenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btUitschrijven)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMasterClassAanpassen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnWachtlijst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSluit))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSluit)
                    .addComponent(btnWachtlijst)
                    .addComponent(btUitschrijven)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(btnMasterClassAanpassen))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSluitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSluitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btSluitActionPerformed

    private void btUitschrijvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUitschrijvenActionPerformed
        try {
            int colIndex = tbMasterclass.getSelectedRow();
            IngeschrevenSpelers ingeschrevenSpelers = new IngeschrevenSpelers(masterclasses.get(colIndex));

            ingeschrevenSpelers.setVisible(true);
        } catch (ArrayIndexOutOfBoundsException e) {

        }

    }//GEN-LAST:event_btUitschrijvenActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MasterclassToevoegen masterclassToevoegen = new MasterclassToevoegen(this);
        masterclassToevoegen.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        LocatieOpties locatieOpties = new LocatieOpties();
        locatieOpties.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        LeraarOpties leraaropties = new LeraarOpties(this);
        leraaropties.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnMasterClassAanpassenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMasterClassAanpassenActionPerformed
        // TODO add your handling code here:
        try {
            int colIndex = tbMasterclass.getSelectedRow();
            MasterclassAanpassen MasterclassAanpassen = new MasterclassAanpassen(this, masterclasses.get(colIndex));

            MasterclassAanpassen.setVisible(true);
        } catch (ArrayIndexOutOfBoundsException e) {

        }

    }//GEN-LAST:event_btnMasterClassAanpassenActionPerformed

    private void btnWachtlijstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWachtlijstActionPerformed
        // TODO add your handling code here:
        try {
            MasterclassWachtlijst spelerlijst = new MasterclassWachtlijst();
            spelerlijst.setVisible(true);
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }//GEN-LAST:event_btnWachtlijstActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSluit;
    private javax.swing.JButton btUitschrijven;
    private javax.swing.JButton btnMasterClassAanpassen;
    private javax.swing.JButton btnWachtlijst;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbMasterclass;
    // End of variables declaration//GEN-END:variables
}
