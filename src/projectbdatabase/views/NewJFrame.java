/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectBdatabase.views;

import ProjectBdatabase.databaseUtil.Connector;
import ProjectBdatabase.models.PokerEvent;
import ProjectBdatabase.models.Speler;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Martijn
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private ArrayList<PokerEvent> events;

    public NewJFrame() {
        initComponents();
        vulCombobox();
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(jRadioButton1);
        buttonGroup.add(jRadioButton2);
        buttonGroup.add(jRadioButton3);
        buttonGroup.add(jRadioButton4);
        buttonGroup.add(jRadioButton5);
    }

    public void vulTafel(int aantalDeelnemers) {
        String col[] = {"grote", "1e ronde", "2e ronde", "3e ronde"};

        DefaultTableModel tableModel = new DefaultTableModel(col, 0);
        int i = 4;

        jTable1.setModel(tableModel);// The 0 argument is number rows.
        while (i < 9) {
            String[] arrayTafels = new String[4];
            String opstelling = AlgoritmeV4.Test(aantalDeelnemers, i);
            System.out.println(opstelling);
            if (!opstelling.equals("fout")) {

                for (int x = 0; x < 4; x++) {
                    arrayTafels[0] = "" + i;

                    try {
                        String erna = opstelling.split("\\/")[x];
                        arrayTafels[x] = erna;
                    } catch (ArrayIndexOutOfBoundsException e) {
                        arrayTafels[x] = " ";

                    }

                }
                Object[] objs = {arrayTafels[0], arrayTafels[1], arrayTafels[2], arrayTafels[3]};
                tableModel.addRow(objs);
            } else {
                //Object[] objs = {i+""," ", " "," "};
                //tableModel.addRow(objs);
                if (i == 4) {
                    jRadioButton1.setVisible(false);
                }
                if (i == 5) {
                    jRadioButton2.setVisible(false);
                }
                if (i == 6) {
                    jRadioButton3.setVisible(false);
                }
                if (i == 7) {
                    jRadioButton4.setVisible(false);
                }
                if (i == 8) {
                    jRadioButton5.setVisible(false);
                }
            }

            i = i + 1;
        }

    }

    private void vulCombobox() {
        events = new ArrayList();
        DefaultComboBoxModel modelEvents = new DefaultComboBoxModel();
        try {
            //Connectie ophalen met behulp van DataBaseConnector
            Connection conn = Connector.getConnection();

            //Statement object aanmaken met behulp van zojuist aangemaakte connectie
            Statement stat = conn.createStatement();

            //Klanten ophalen uit database
            ResultSet result = stat.executeQuery("SELECT * FROM poker_event PE WHERE PE.pe_code IN (SELECT t.pe_code FROM toernooi t)");

            //Resultset doorlopen.
            while (result.next()) {
                int eventID = result.getInt("pe_code");
                String naam = result.getString("naam");
                String datum = result.getString("datum");
                String postcode = result.getString("postcode");
                String huisnummer = result.getString("huisnummer");
                int aantal_deelnemers = result.getInt("aantal_deelnemers");

                PokerEvent pokerevents = new PokerEvent(eventID, naam, datum, postcode, huisnummer, aantal_deelnemers);
                events.add(pokerevents);
                modelEvents.addElement(pokerevents.pe_code() + " " + pokerevents.naam());

            }
            this.jComboBox1.setModel(modelEvents);

            //Afsluiten van resources.
            result.close();
            stat.close();

        } catch (SQLException exc) {
            System.err.println("Sql fout bij het ophalen van klanten: " + exc.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tafelverdeling");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "grote", "1e ronde", "2e ronde", "3e ronde"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        jRadioButton1.setText("4");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("5");

        jRadioButton3.setText("6");

        jRadioButton4.setText("7");

        jRadioButton5.setText("8");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Annuleren");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Grote tafels:");

        jLabel3.setText("Toernooi:");

        jLabel4.setText("Eerste getal is grote van de tafel");

        jLabel5.setText("Tweede getal is aantal tafels");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton5))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2)
                        .addComponent(jRadioButton3)
                        .addComponent(jRadioButton4)
                        .addComponent(jRadioButton5)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5)))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String opstelling = "";
            if (jRadioButton1.isSelected()) {
                opstelling = AlgoritmeV4.Test(test2(), 4);
                System.out.println(opstelling);
            }
            if (jRadioButton2.isSelected()) {
                opstelling = AlgoritmeV4.Test(test2(), 5);
                System.out.println(opstelling);
            }
            if (jRadioButton3.isSelected()) {
                opstelling = AlgoritmeV4.Test(test2(), 6);
                System.out.println(opstelling);
            }
            if (jRadioButton4.isSelected()) {
                opstelling = AlgoritmeV4.Test(test2(), 7);
                System.out.println(opstelling);
            }
            if (jRadioButton5.isSelected()) {
                System.out.println("test" + test2());
                opstelling = AlgoritmeV4.Test(test2(), 8);

            }
            int selected = this.jComboBox1.getSelectedIndex();
            PokerEvent geselecteerd = events.get(selected);
            try {
                Connection conn = Connector.getConnection();
                Statement stat = conn.createStatement();

                String prepStatInsertKlant = "UPDATE toernooi set verdeling_tafels =? WHERE pe_code =?";
                PreparedStatement prepStat = conn.prepareStatement(prepStatInsertKlant);

                prepStat.setString(1, opstelling);
                prepStat.setInt(2, geselecteerd.pe_code());

                prepStat.executeUpdate();

                stat.close();

                JOptionPane.showMessageDialog(this, "Klant heeft betaald");

                this.dispose();
            } catch (SQLException exc) {
                JOptionPane.showMessageDialog(this, "Klant niet opgeslagen in de database" + exc.toString());
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private int test2() {
        int selected = this.jComboBox1.getSelectedIndex();
        PokerEvent geselecteerd = events.get(selected);

        try {
            Connection conn = Connector.getConnection();
            Statement stat = conn.createStatement();

            String prepString = "SELECT count(I.betaald) from inschrijving I join poker_event P on P.pe_code = I.pe_code WHERE I.pe_code =? AND I.betaald = 1;";
            //String prepString = "select * from speler S join speler_plek SP on S.s_code=SP.s_code where ta_code = ?";
            PreparedStatement prepStat = conn.prepareStatement(prepString);
            System.out.println(geselecteerd.pe_code());
            prepStat.setInt(1, geselecteerd.pe_code());
            ResultSet result = prepStat.executeQuery();
            int aantalmensen = 0;
            while (result.next()) {
                //aantalmensen = result.getInt("count(I.betaald)");
                aantalmensen = 171;
                System.out.println(aantalmensen);
                return aantalmensen;
            }

            stat.close();

        } catch (SQLException exc) {
            JOptionPane.showMessageDialog(this, "Klant niet opgeslagen in de database" + exc.toString());
        }
        return 0;
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int selected = this.jComboBox1.getSelectedIndex();
        PokerEvent geselecteerd = events.get(selected);

        try {
            Connection conn = Connector.getConnection();
            Statement stat = conn.createStatement();

            String prepString = "SELECT count(I.betaald) from inschrijving I join poker_event P on P.pe_code = I.pe_code WHERE I.pe_code =? AND I.betaald = 1;";
            //String prepString = "select * from speler S join speler_plek SP on S.s_code=SP.s_code where ta_code = ?";
            PreparedStatement prepStat = conn.prepareStatement(prepString);
            System.out.println(geselecteerd.pe_code());
            prepStat.setInt(1, geselecteerd.pe_code());
            ResultSet result = prepStat.executeQuery();
            int aantalmensen = 0;
            while (result.next()) {
                aantalmensen = result.getInt("count(I.betaald)");
                System.out.println(aantalmensen);
                aantalmensen = 171;
            }
            vulTafel(aantalmensen);

            stat.close();

            JOptionPane.showMessageDialog(this, "Klant heeft betaald");

        } catch (SQLException exc) {
            JOptionPane.showMessageDialog(this, "Klant niet opgeslagen in de database" + exc.toString());
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
