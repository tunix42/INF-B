/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectBdatabase.views;

import ProjectBdatabase.databaseUtil.Connector;
import ProjectBdatabase.models.Locatie;
import ProjectBdatabase.models.Speler;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ruben
 */
public class ToernooiToevoegen extends javax.swing.JFrame {

    private ArrayList<Locatie> locaties;
    ToernooiOpties toernooiOpties;

    public ToernooiToevoegen(ToernooiOpties toernooiOpties) {
        this.toernooiOpties = toernooiOpties;
        initComponents();
        vulCombobox();
    }

    private void vulCombobox() {
        locaties = new ArrayList();
        DefaultComboBoxModel modelLocatie = new DefaultComboBoxModel();
        try {
            //Connectie ophalen met behulp van DataBaseConnector
            Connection conn = Connector.getConnection();

            //Statement object aanmaken met behulp van zojuist aangemaakte connectie
            Statement stat = conn.createStatement();

            //Klanten ophalen uit database
            ResultSet result = stat.executeQuery("SELECT * FROM locatie");

            //Resultset doorlopen.
            while (result.next()) {

                String naam = result.getString("naam");
                double huur = result.getDouble("huur");
                int aantaldeelnemers = result.getInt("max_aantal_deelnemers");
                String huisnummer = result.getString("huisnummer");
                String postcode = result.getString("postcode");
                String plaats = result.getString("plaats");

                Locatie locatie = new Locatie(naam, postcode, huisnummer, plaats, aantaldeelnemers, huur);
                locaties.add(locatie);
                modelLocatie.addElement(locatie.plaats() + " " + locatie.postcode());

            }
            this.cbLocatie.setModel(modelLocatie);

            //Afsluiten van resources.
            result.close();
            stat.close();

        } catch (SQLException exc) {
            System.err.println("Sql fout bij het ophalen van klanten: " + exc.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cbLocatie = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        tfNaam = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbDag = new javax.swing.JComboBox();
        cbMaand = new javax.swing.JComboBox();
        cbJaar = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        tfInleg = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Toernooi toevoegen");

        jLabel3.setText("Locatie:");

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Toernooi naam:");

        jLabel5.setText("Datum:");

        cbDag.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cbDag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDagActionPerformed(evt);
            }
        });

        cbMaand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cbJaar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020" }));

        jLabel4.setText("Inleggeld");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(cbDag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMaand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbJaar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(67, 67, 67)
                        .addComponent(cbLocatie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfNaam, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfInleg, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLocatie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbDag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMaand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbJaar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfInleg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int aantalValidFields = 0;

            String naam = this.tfNaam.getText();
            String inleg = this.tfInleg.getText();

            if (CheckInput.checkInput(naam) == 0) {
                tfNaam.setBackground(Color.RED);
            } else {
                tfNaam.setBackground(Color.WHITE);
                aantalValidFields = aantalValidFields + 1;
            }

            if (CheckInput.checkDouble(inleg) == 0) {
                tfInleg.setBackground(Color.RED);
            } else {
                tfInleg.setBackground(Color.WHITE);
                aantalValidFields = aantalValidFields + 1;
            }

            if (aantalValidFields == 2) {
                try {
                    Connection conn = Connector.getConnection();
                    Statement stat = conn.createStatement();

                    String prepStatInsertKlant = "INSERT INTO poker_event ( naam,datum,huisnummer,postcode) "
                            + "VALUES (?,?,?,?)";
                    PreparedStatement prepStat = conn.prepareStatement(prepStatInsertKlant);

                    int selected = this.cbLocatie.getSelectedIndex();
                    Locatie geselecteerd = locaties.get(selected);

                    prepStat.setString(1, naam);
                    prepStat.setString(2, this.cbJaar.getSelectedItem().toString() + "/" + this.cbMaand.getSelectedItem().toString() + "/" + this.cbDag.getSelectedItem().toString());
                    prepStat.setString(3, geselecteerd.huisnummer());
                    prepStat.setString(4, geselecteerd.postcode());

                    prepStat.executeUpdate();

                    int pe_code = SelectLatestRows();

                    String prepStatInsertToernooi = "INSERT INTO toernooi ( pe_code,inleggeld,totaal_inleggeld) "
                            + "VALUES (?,?,0)";
                    PreparedStatement prepStatToernooi = conn.prepareStatement(prepStatInsertToernooi);

                    prepStatToernooi.setInt(1, pe_code);
                    prepStatToernooi.setDouble(2, Double.parseDouble(inleg));

                    prepStatToernooi.executeUpdate();
                    stat.close();

                    JOptionPane.showMessageDialog(this, "Toernooi opgeslagen in de database");
                    this.toernooiOpties.Vullijst();
                    this.dispose();
                } catch (SQLException exc) {
                    JOptionPane.showMessageDialog(this, "Toernooi niet opgeslagen in de database" + exc.toString());
                }
                this.dispose();

                this.dispose();
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private int SelectLatestRows() {
        try {
            //Connectie ophalen met behulp van DataBaseConnector
            Connection conn = Connector.getConnection();

            //Statement object aanmaken met behulp van zojuist aangemaakte connectie
            Statement stat = conn.createStatement();

            //Klanten ophalen uit database
            ResultSet result = stat.executeQuery("SELECT max(pe_code) as maxgetal FROM poker_event");

            //Resultset doorlopen.
            while (result.next()) {
                int nummer = result.getInt("maxgetal");
                return nummer;

            }

            //Afsluiten van resources.
            result.close();
            stat.close();

        } catch (SQLException exc) {
            System.err.println("Sql fout bij het ophalen van pecode: " + exc.toString());
        }

        return 0;
    }
    private void cbDagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDagActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDagActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbDag;
    private javax.swing.JComboBox cbJaar;
    private javax.swing.JComboBox cbLocatie;
    private javax.swing.JComboBox cbMaand;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tfInleg;
    private javax.swing.JTextField tfNaam;
    // End of variables declaration//GEN-END:variables
}
