/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectBdatabase.views;

import ProjectBdatabase.databaseUtil.Connector;
import ProjectBdatabase.models.Speler;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ruben
 */
public class LeraarAanmaken extends javax.swing.JFrame {

    private ArrayList<Speler> spelers;
    private LeraarOpties leraarOpties;

    public LeraarAanmaken(LeraarOpties leraarOpties) {

        this.leraarOpties = leraarOpties;
        initComponents();
        vulCombobox();
    }

    private void vulCombobox() {
        spelers = new ArrayList();
        DefaultComboBoxModel modelSpelers = new DefaultComboBoxModel();
        try {
            //Connectie ophalen met behulp van DataBaseConnector
            Connection conn = Connector.getConnection();

            //Statement object aanmaken met behulp van zojuist aangemaakte connectie
            Statement stat = conn.createStatement();

            //Klanten ophalen uit database
            ResultSet result = stat.executeQuery("SELECT * FROM speler S where S.s_code not in(select L.s_code from leraar L)");

            //Resultset doorlopen.
            while (result.next()) {
                int spelerID = result.getInt("s_code");
                String naam = result.getString("naam");
                String huisnummer = result.getString("huisnummer");
                String postcode = result.getString("postcode");
                String woonplaats = result.getString("woonplaats");
                String telefoonnummer = result.getString("telefoonnummer");
                String email = result.getString("email");
                int rating = result.getInt("rating");
                int totaalgewonnengeld = result.getInt("totaalgewonnengeld");

                Speler speler = new Speler(spelerID, naam, huisnummer, postcode, woonplaats, telefoonnummer, email, rating, totaalgewonnengeld);
                spelers.add(speler);
                modelSpelers.addElement(speler.s_code() + " " + speler.naam());

            }
            this.cbSpelers.setModel(modelSpelers);

            //Afsluiten van resources.
            result.close();
            stat.close();

        } catch (SQLException exc) {
            System.err.println("Sql fout bij het ophalen van klanten: " + exc.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbSpelers = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        tfSalaris = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Leraar aanmaken");

        jLabel1.setText("Spelers:");

        jLabel2.setText("Salaris:");

        tfSalaris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSalarisActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Annuleren");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSpelers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSalaris))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbSpelers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfSalaris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfSalarisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSalarisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSalarisActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int aantalValidFields = 0;
            String salaris = this.tfSalaris.getText();

            if (CheckInput.checkDouble(salaris) == 0) {
                tfSalaris.setBackground(Color.RED);
            } else {
                tfSalaris.setBackground(Color.WHITE);
                aantalValidFields = aantalValidFields + 1;
            }
            if (aantalValidFields == 1) {
                try {
                    Connection conn = Connector.getConnection();
                    Statement stat = conn.createStatement();

                    String prepStatInsertKlant = "INSERT INTO leraar ( s_code,salaris) "
                            + "VALUES (?,?)";
                    PreparedStatement prepStat = conn.prepareStatement(prepStatInsertKlant);

                    int selected = this.cbSpelers.getSelectedIndex();
                    Speler geselecteerd = spelers.get(selected);

                    prepStat.setInt(1, geselecteerd.s_code());
                    prepStat.setDouble(2, Double.parseDouble(salaris));

                    prepStat.executeUpdate();

                    stat.close();

                    JOptionPane.showMessageDialog(this, "Leraar opgeslagen in de database");

                    this.dispose();
                    leraarOpties.Vullijst();
                } catch (SQLException exc) {
                    JOptionPane.showMessageDialog(this, "leraar niet opgeslagen in de database" + exc.toString());
                }
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbSpelers;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tfSalaris;
    // End of variables declaration//GEN-END:variables
}
